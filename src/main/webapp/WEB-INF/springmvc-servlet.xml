<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

     <import resource="applicationContext-security.xml"/>
	<context:component-scan base-package="com.dzx.app" />
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
		<!-- Default charset -->
		<property name="charset" value="UTF-8" />
		<!-- Default dateFormat -->
		<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss" />
		<property name="serializerFeatures">
			<list>
				<value>PrettyFormat</value>
				<value>WriteDateUseDateFormat</value>
				<value>WriteMapNullValue</value>
				<value>WriteNullStringAsEmpty</value>
				<value>WriteNullNumberAsZero</value>
				<value>WriteNullBooleanAsFalse</value>
			</list>
		</property>
	</bean>
	<mvc:annotation-driven>
		<mvc:message-converters>
			<!-- spring 3用这个类,spring 4用FastJsonHttpMessageConverter4 -->
			<bean
				class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<!-- MediaTypes -->
				<property name="supportedMediaTypes">
					<list>
						<value>application/json</value>
					</list>
				</property>
				<!-- FastJsonConfig -->
				<property name="fastJsonConfig" ref="fastJsonConfig" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- <bean class="org.springframework.web.servlet.mvc.support.ControllerBeanNameHandlerMapping" 
		/> <bean name="testT2" class="com.dzx.app.controller.BaseNameController" 
		/> -->



	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>





	<bean id="audience" class="com.dzx.app.common.Audience" />

	<aop:config>
		<aop:aspect ref="audience">
			<aop:pointcut id="performance"
				expression="execution(* com.dzx.app.mapper.*.*(..))" />
			<aop:before pointcut-ref="performance" method="takeSeats" />
			<aop:before pointcut-ref="performance" method="turnOffCellPhones" />
			<aop:after-returning pointcut="execution(* com.dzx.app.mapper.*.*(..))"
				method="applaud" />
			<aop:after-throwing pointcut="execution(* com.dzx.app.mapper.*.*(..))"
				method="demandRefund" />

			<!-- <aop:around pointcut-ref="performance" method="watchPerformance" 
				/> -->
		</aop:aspect>
	</aop:config>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:mysql://172.18.255.164/blog?useSSL=false&amp;autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF-8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
		<property name="initialSize" value="10" />
		<property name="maxTotal" value="100" />
		<property name="maxIdle" value="100" />
		<property name="maxWaitMillis" value="-1" />
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--dataSource属性指定要用到的连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!--configLocation属性指定mybatis的核心配置文件 -->
		<property name="mapperLocations" value="classpath*:mappers/**/*.xml" />
		<property name="typeAliasesPackage" value="com.dzx.app.entity" />
		<!-- mybatis-spring 1.3.0 开始加入configuration属性 -->
		<property name="configuration">
			<bean class="org.apache.ibatis.session.Configuration">
				<property name="cacheEnabled" value="true" />
				<property name="lazyLoadingEnabled" value="true" />
				<property name="aggressiveLazyLoading" value="false" />
				<property name="multipleResultSetsEnabled" value="true" />
				<property name="useColumnLabel" value="true" />
				<property name="defaultExecutorType" value="SIMPLE" />
				<property name="defaultStatementTimeout" value="25000" />
				<property name="mapUnderscoreToCamelCase" value="true" />
				<!-- 是否使用插入数据后自增主键的值，需要配合keyProperty使用 -->
				<property name="useGeneratedKeys" value="true" />
				<!--此属性从旅游复制过来的，功能待验证 -->
				<property name="callSettersOnNulls" value="true" />
			</bean>
		</property>
	</bean>

	<!--加入事务支持，这里面的dataSource需要和sqlSessionFactory中的是同一个，要不事务不起作用 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	

	<!--用MapperFactoryBean一个一个地定义或者使用org.mybatis.spring.mapper.MapperScannerConfigurer 
		一次定义所有的Mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.dzx.app.mapper" />
		<!-- 如果你使 用了一个 以上的 DataSource ,那 么自动 装配可 能会失效 。这种 情况下 ,你可 以使用 sqlSessionFactoryBeanName 
			或 sqlSessionTemplateBeanName属性来设置正确的 bean 名 称来使用。 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

</beans>